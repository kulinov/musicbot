import telebot
from yt_dlp import YoutubeDL
import os
from pydub import AudioSegment
import logging
from flask import Flask
from threading import Thread

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.DEBUG, filename='bot_errors.log', filemode='w',
                    format='%(asctime)s - %(levelname)s - %(message)s')

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ Telegram-–±–æ—Ç–∞
BOT_TOKEN = '8040295705:AAEwkOPQnuiwVqZ_B-iCgRwQY9mP09clHJ0'

bot = telebot.TeleBot(BOT_TOKEN)

# –°–æ–∑–¥–∞–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = Flask(__name__)

@app.route('/')
def index():
    return "Telegram bot —Ä–∞–±–æ—Ç–∞–µ—Ç!"

@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏, –∏ —è –Ω–∞–π–¥—É –µ—ë –¥–ª—è —Ç–µ–±—è üéµ")

@bot.message_handler(func=lambda message: True)
def search_and_send_music(message):
    query = message.text
    bot.reply_to(message, f"–ò—â—É –ø–µ—Å–Ω—é: {query}... –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ üéß")

    try:
        # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∞—É–¥–∏–æ
        ydl_opts = {
            'format': 'bestaudio/best',
            'noplaylist': True,
            'extractaudio': True,
            'audioformat': 'mp3',
            'outtmpl': '%(title)s.%(ext)s',
            'quiet': True,
        }

        # –ü–æ–∏—Å–∫ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –∞—É–¥–∏–æ
        with YoutubeDL(ydl_opts) as ydl:
            info = ydl.extract_info(f"ytsearch:{query}", download=True)['entries'][0]
            file_name = ydl.prepare_filename(info)

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
        if not os.path.exists(file_name):
            bot.reply_to(message, "–û—à–∏–±–∫–∞: —Ñ–∞–π–ª —Å –ø–µ—Å–Ω–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω üòî.")
            logging.error(f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏: {file_name}")
            return

        # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ MP3, –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è
        if not file_name.endswith('.mp3'):
            mp3_file = os.path.splitext(file_name)[0] + '.mp3'
            AudioSegment.from_file(file_name).export(mp3_file, format='mp3')
            os.remove(file_name)  # –£–¥–∞–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª
            file_name = mp3_file

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
        file_size = os.path.getsize(file_name)
        if file_size > 50 * 1024 * 1024:  # 50 –ú–ë
            bot.reply_to(message, "–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ üòî. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–π—Ç–∏ –¥—Ä—É–≥—É—é –ø–µ—Å–Ω—é.")
            os.remove(file_name)
            return

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∞—É–¥–∏–æ –≤ —á–∞—Ç
        with open(file_name, 'rb') as audio:
            bot.send_audio(message.chat.id, audio, title=info['title'], performer=info.get('uploader', 'Unknown'))

        # –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
        os.remove(file_name)

    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        bot.reply_to(message, f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–µ—Å–Ω—é üòî\n–û—à–∏–±–∫–∞: {e}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Flask –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
def run_flask():
    app.run(host='0.0.0.0', port=5000)

# –ó–∞–ø—É—Å–∫ Flask –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
flask_thread = Thread(target=run_flask)
flask_thread.start()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()
